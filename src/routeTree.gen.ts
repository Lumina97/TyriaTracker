/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksImport } from './routes/Tasks'
import { Route as SignInImport } from './routes/SignIn'
import { Route as AccountImport } from './routes/Account'
import { Route as IndexImport } from './routes/index'
import { Route as TradingPostIndexImport } from './routes/TradingPost.index'
import { Route as TradingPostItemidImport } from './routes/TradingPost.$itemid'
import { Route as TasksTaskItemImport } from './routes/Tasks.$taskItem'

// Create/Update Routes

const TasksRoute = TasksImport.update({
  path: '/Tasks',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  path: '/SignIn',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  path: '/Account',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TradingPostIndexRoute = TradingPostIndexImport.update({
  path: '/TradingPost/',
  getParentRoute: () => rootRoute,
} as any)

const TradingPostItemidRoute = TradingPostItemidImport.update({
  path: '/TradingPost/$itemid',
  getParentRoute: () => rootRoute,
} as any)

const TasksTaskItemRoute = TasksTaskItemImport.update({
  path: '/$taskItem',
  getParentRoute: () => TasksRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/Account': {
      id: '/Account'
      path: '/Account'
      fullPath: '/Account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/SignIn': {
      id: '/SignIn'
      path: '/SignIn'
      fullPath: '/SignIn'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/Tasks': {
      id: '/Tasks'
      path: '/Tasks'
      fullPath: '/Tasks'
      preLoaderRoute: typeof TasksImport
      parentRoute: typeof rootRoute
    }
    '/Tasks/$taskItem': {
      id: '/Tasks/$taskItem'
      path: '/$taskItem'
      fullPath: '/Tasks/$taskItem'
      preLoaderRoute: typeof TasksTaskItemImport
      parentRoute: typeof TasksImport
    }
    '/TradingPost/$itemid': {
      id: '/TradingPost/$itemid'
      path: '/TradingPost/$itemid'
      fullPath: '/TradingPost/$itemid'
      preLoaderRoute: typeof TradingPostItemidImport
      parentRoute: typeof rootRoute
    }
    '/TradingPost/': {
      id: '/TradingPost/'
      path: '/TradingPost'
      fullPath: '/TradingPost'
      preLoaderRoute: typeof TradingPostIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface TasksRouteChildren {
  TasksTaskItemRoute: typeof TasksTaskItemRoute
}

const TasksRouteChildren: TasksRouteChildren = {
  TasksTaskItemRoute: TasksTaskItemRoute,
}

const TasksRouteWithChildren = TasksRoute._addFileChildren(TasksRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Account': typeof AccountRoute
  '/SignIn': typeof SignInRoute
  '/Tasks': typeof TasksRouteWithChildren
  '/Tasks/$taskItem': typeof TasksTaskItemRoute
  '/TradingPost/$itemid': typeof TradingPostItemidRoute
  '/TradingPost': typeof TradingPostIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Account': typeof AccountRoute
  '/SignIn': typeof SignInRoute
  '/Tasks': typeof TasksRouteWithChildren
  '/Tasks/$taskItem': typeof TasksTaskItemRoute
  '/TradingPost/$itemid': typeof TradingPostItemidRoute
  '/TradingPost': typeof TradingPostIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/Account': typeof AccountRoute
  '/SignIn': typeof SignInRoute
  '/Tasks': typeof TasksRouteWithChildren
  '/Tasks/$taskItem': typeof TasksTaskItemRoute
  '/TradingPost/$itemid': typeof TradingPostItemidRoute
  '/TradingPost/': typeof TradingPostIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Account'
    | '/SignIn'
    | '/Tasks'
    | '/Tasks/$taskItem'
    | '/TradingPost/$itemid'
    | '/TradingPost'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Account'
    | '/SignIn'
    | '/Tasks'
    | '/Tasks/$taskItem'
    | '/TradingPost/$itemid'
    | '/TradingPost'
  id:
    | '__root__'
    | '/'
    | '/Account'
    | '/SignIn'
    | '/Tasks'
    | '/Tasks/$taskItem'
    | '/TradingPost/$itemid'
    | '/TradingPost/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  SignInRoute: typeof SignInRoute
  TasksRoute: typeof TasksRouteWithChildren
  TradingPostItemidRoute: typeof TradingPostItemidRoute
  TradingPostIndexRoute: typeof TradingPostIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  SignInRoute: SignInRoute,
  TasksRoute: TasksRouteWithChildren,
  TradingPostItemidRoute: TradingPostItemidRoute,
  TradingPostIndexRoute: TradingPostIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Account",
        "/SignIn",
        "/Tasks",
        "/TradingPost/$itemid",
        "/TradingPost/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Account": {
      "filePath": "Account.tsx"
    },
    "/SignIn": {
      "filePath": "SignIn.tsx"
    },
    "/Tasks": {
      "filePath": "Tasks.tsx",
      "children": [
        "/Tasks/$taskItem"
      ]
    },
    "/Tasks/$taskItem": {
      "filePath": "Tasks.$taskItem.tsx",
      "parent": "/Tasks"
    },
    "/TradingPost/$itemid": {
      "filePath": "TradingPost.$itemid.tsx"
    },
    "/TradingPost/": {
      "filePath": "TradingPost.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
